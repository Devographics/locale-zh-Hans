locale: zh-Hans
namespace: js
translations:
    ###########################################################################
    # General
    ###########################################################################

    - key: general.state_of_js.intro
      t: >
          The JavaScript world could use a bit of classification.


          自2016年以来，
          本调查每年从20,000多名开发人员中获取调查数据，以确定JavaScript当前和未来的趋势。


          快来参加调查，
          帮助我们寻找开发人员接下来需要学习的库，满意度最高的库等等。

    ###########################################################################
    # Sections
    ###########################################################################

    - key: sections.syntax.title
      t: 语法
    - key: sections.syntax.description
      t: JavaScript的语法。

    - key: sections.language.title
      t: 语言
    - key: sections.language.description
      t: JavaScript 的词汇表。

    - key: sections.data_structures.title
      t: 数据结构
    - key: sections.data_structures.description
      t: 如何存储和操作数据。

    - key: sections.browser_apis.title
      t: 浏览器 API
    - key: sections.browser_apis.description
      t: 浏览器提供的功能。

    - key: sections.other_features.title
      t: 其他特征
    - key: sections.other_features.description
      t: 其他技术特征

    - key: sections.patterns.title
      t: 编码方式
    - key: sections.patterns.description
      t: 你喜欢如何编写代码？

    # 在中文中，很难找到一个准确形容JavaScript_flavors的词，因此只能简单翻译为「开发语言」
    - key: sections.javascript_flavors.title
      t: 开发语言
    - key: sections.javascript_flavors.description
      t: 可以编译为 JavaScript 的，用于开发的语言

    - key: sections.front_end_frameworks.title
      t: 前端框架
    - key: sections.front_end_frameworks.description
      t: 前端框架和类库

    - key: sections.datalayer.title
      t: 数据层
    - key: sections.datalayer.description
      t: 在你的应用中加载和管理数据

    - key: sections.back_end_frameworks.title
      t: 后端框架
    - key: sections.back_end_frameworks.description
      t: 服务端的 JavaScript

    - key: sections.testing.title
      t: 测试工具
    - key: sections.testing.description
      t: 代码测试工具

    - key: sections.mobile_desktop.title
      t: 移动端和客户端
    - key: sections.mobile_desktop.description
      t: 用于移动设备和桌面端app的 JavaScript

    - key: sections.build_tools.title
      t: 构建工具
    - key: sections.build_tools.description
      t: 编译和打包代码

    - key: sections.monorepo_tools.title
      t: Monorepo 工具
    - key: sections.monorepo_tools.description
      t: 用于管理 monorepo 的工具
      
    - key: sections.tools_others.title
      t: 其他工具
    - key: sections.tools_others.description
      t: 其他JavaScript工具
      
    - key: sections.other_tools.title
      t: 其他工具
    - key: sections.other_tools.description
      t: 对于这些工具和技术，只需检查你经常使用的工具和技术。

    ###########################################################################
    # Options
    ###########################################################################

    # JS pain points
    # - key: options.js_pain_points.browser_interoperability
    #   t: Browser Compatibility
    # - key: options.js_pain_points.browser_interoperability.description
    #   t: Differences between Chrome, Safari, Firefox, etc.
    # - key: options.js_pain_points.animations
    #   t: Animations
    # - key: options.js_pain_points.animations.description
    #   t: Managing animations, transitions, etc. using JavaScript.
    # - key: options.js_pain_points.form_handling
    #   t: Form Handling
    # - key: options.js_pain_points.form_handling.description
    #   t: Creating forms, managing their state and errors, and saving their data. 
    - key: options.js_pain_points.state_management
      t: 全局数据管理
    - key: options.js_pain_points.state_management.description
      t: 管理复杂应用程序中的全局数据状态。 
    # - key: options.js_pain_points.performance_issues
    #   t: Performance Issues
    # - key: options.js_pain_points.performance_issues.description
    #   t: Bundle sizes, slow loading, and other performance issues. 
    - key: options.js_pain_points.managing_dependencies
      t: 依赖管理
    - key: options.js_pain_points.managing_dependencies.description
      t: 管理依赖项、包版本和包大小
    - key: options.js_pain_points.architecture
      t: 代码架构
    - key: options.js_pain_points.architecture.description
      t: 组织和维护代码仓库。
    - key: options.js_pain_points.finding_packages
      t: 查找包
    - key: options.js_pain_points.finding_packages.description
      t: 查找和评估JavaScript包。
    - key: options.js_pain_points.writing_modules
      t: 编写模块
    - key: options.js_pain_points.writing_modules.description
      t: 编写JavaScript模块并将其作为包发布。 
    - key: options.js_pain_points.debugging
      t: 调试
    - key: options.js_pain_points.debugging.description
      t: 识别和解决代码中的问题。 
    - key: options.js_pain_points.async_code
      t: 异步代码
    - key: options.js_pain_points.async_code.description
      t: 处理异步函数。 
    - key: options.js_pain_points.modules_management
      t: 模块管理
    - key: options.js_pain_points.modules_management.description
      t: 编写和导入模块。 
    - key: options.js_pain_points.date_management
      t: 日期管理
    - key: options.js_pain_points.date_management.description
      t: 处理和操纵日期和时间。 
    # - key: options.js_pain_points.xxx
    #   t: 
    # - key: options.js_pain_points.xxx.description
    #   t: 


    # JS missing features
    - key: options.currently_missing_from_js.static_typing
      t: 静态类型
    - key: options.currently_missing_from_js.static_typing.description
      t: 原生静态类型（类似于TypeScript提供的类型）。
    - key: options.currently_missing_from_js.standard_library
      t: 标准库
    - key: options.currently_missing_from_js.standard_library.description
      t: 通用实用程序的标准库
    - key: options.currently_missing_from_js.pattern_matching
      t: 模式匹配
    - key: options.currently_missing_from_js.pattern_matching.description
      t: 提供新的“match”关键字用于模式匹配对象。 
    - key: options.currently_missing_from_js.pipe_operator
      t: 管道操作
    - key: options.currently_missing_from_js.pipe_operator.description
      t: 一个新的“|>”运算符，用于将一个函数的结果传递给另一个函数。
    - key: options.currently_missing_from_js.decorators
      t: 装饰器
    - key: options.currently_missing_from_js.decorators.description
      t: 用于元编程或向某一个值添加功能的装饰器。
    - key: options.currently_missing_from_js.immutable_data_structures
      t: 不可变的数据结构
    - key: options.currently_missing_from_js.immutable_data_structures.description
      t: 新的不可变的数据结构，如'Record'和'Tuple'。
    - key: options.currently_missing_from_js.better_date_management
      t: 更好的日期管理
    - key: options.currently_missing_from_js.better_date_management.description
      t: 用于处理日期和时间的新的“临时”对象。
    - key: options.currently_missing_from_js.observable
      t: 可观察类型
    - key: options.currently_missing_from_js.observable.description
      t: 一种新的“可观察”类型，用于对推送的数据源进行建模。
    # - key: options.currently_missing_from_js.xxx
    #   t: 
    # - key: options.currently_missing_from_js.xxx.description
    #   t: 
    

    ###########################################################################
    # Features
    ###########################################################################

    # syntax
    - key: features.destructuring
      t: 结构
    - key: features.destructuring.description
      t: '例子: `const { foo } = bar`'
    - key: features.spread_operator
      t: 扩展运算符
    - key: features.spread_operator.description
      t: '例子: `[...array1, ...array2]`'
    - key: features.arrow_functions
      t: 箭头函数
    - key: features.arrow_functions.description
      t: '例子: `const foo = () => {}`'
    - key: features.nullish_coalescing
      t: 空值合并运算符 Nullish Coalescing
    - key: features.nullish_coalescing.description
      t: >
        例子: `const foo = 0 ?? 42`
    - key: features.optional_chaining
      t: 可选链 Optional Chaining
    - key: features.optional_chaining.description
      t: >
        例子: `const dogName = adventurer.dog?.name`
    - key: features.private_fields
      t: 私有属性
    - key: features.private_fields.description
      t: >
        例子: `class ClassWithPrivateField { #privateField }`

    # language
    - key: features.proxies
      t: 代理
    - key: features.async_await
      t: 异步/等待
    - key: features.promises
      t: Promises
    - key: features.decorators
      t: Decorators 装饰器
    - key: features.decorators.description
      t: >
          简单来说，
          Decorators装饰器是一种将一段代码包装成另一段代码的方法。
    - key: features.dynamic_import
      t: 动态引入
    - key: features.dynamic_import.description
      t: >
        例子: <code>await import('/modules/my-module.js')</code>
    - key: features.promise_all_settled
      t: Promise.allSettled()
    - key: features.big_int
      t: BigInt
    - key: features.numeric_separators
      t: Numeric Separators
    - key: features.string_replace_all
      t: String.prototype.replaceAll()
    - key: features.string_match_all
      t: String.prototype.matchAll()
    - key: features.logical_assignment
      t: Logical Assignment
    - key: features.promise_any
      t: Promise.any()
    - key: features.array_at
      t: Array.prototype.at()
    - key: features.top_level_await
      t: Top-Level Await
    - key: features.intl
      t: Intl
    - key: features.custom_elements
      t: Custom Elements
    - key: features.shadow_dom
      t: Shadow DOM
    - key: features.page_visibility
      t: Page Visibility API
    - key: features.broadcast_channel
      t: Broadcast Channel API
    - key: features.geolocation
      t: Geolocation API
    - key: features.file_system_access
      t: File System Access API
    - key: features.web_share
      t: Web Share API
    - key: features.webxr
      t: WebXR

    # data structures
    - key: features.maps
      t: Maps
    - key: features.sets
      t: Sets
    - key: features.typed_arrays
      t: Typed Arrays
    - key: array_prototype_flat
      t: Array.prototype.flat

    # browser apis
    - key: features.service_workers
      t: Service Workers
    - key: features.local_storage
      t: LocalStorage
    - key: features.i18n
      t: i18n
    - key: features.web_components
      t: Web Components
    - key: features.web_audio
      t: Web Audio API
    - key: features.webgl
      t: WebGL
    - key: features.web_animations
      t: Web Animations API
    - key: features.webrtc
      t: WebRTC
    - key: features.web_speech
      t: Web Speech API
    - key: features.webvr
      t: WebVR
    - key: features.websocket
      t: Websocket
    - key: features.fetch
      t: Fetch API

    # other features
    - key: features.pwa
      t: 渐进式Web应用程序（PWA）
    - key: features.wasm
      t: WebAssembly (WASM)

    # patterns
    - key: patterns.object_oriented_programming
      t: 面向对象编程
    - key: features.functional_programming
      t: 函数式编程
    - key: features.reactive_programming
      t: 响应式编程

    # upcoming features
    # - key: features.static_typing
    #   t: Static Typing

    # - key: features.standard_library
    #   t: Standard Library
    
    # - key: features.pattern_matching
    #   t: Pattern Matching

    # - key: features.pipe_operator
    #   t: Pipe Operator

    # - key: features.immutable_data_structures
    #   t: Immutable Data Structures

    ###########################################################################
    # Tools
    ###########################################################################

    - key: tools.angular.description
      t: >
        请注意，此问题仅针对 [Angular](https://angular.io/) 的用户体验，
        而 *不是* 已经弃用的 [AngularJS](https://angularjs.org/).

    ###########################################################################
    # Other Tools
    ###########################################################################

    - key: tools_others.runtimes
      t: JavaScript 运行时
    - key: tools_others.runtimes.description
      t: 你最常使用哪个引擎/运行时/执行环境？
    - key: tools_others.runtimes.others
      t: 其他运行时
    - key: tools_others.runtimes.others.description
      t: 其他答案（自由填写的答案）。

    - key: tools_others.package_registries
      t: 包管理工具
    - key: tools_others.package_registries.description
      t: 你最常使用哪个包管理工具？
    - key: tools_others.package_registries.others
      t: 其他包管理工具
    - key: tools_others.package_registries.others.description
      t: 其他答案（自由填写的答案）。

    - key: tools_others.form_factors
      aliasFor: environments.form_factors
    - key: tools_others.form_factors.description
      aliasFor: environments.form_factors.description

    ###########################################################################
    # Opinions
    ###########################################################################

    - key: opinions.js_moving_in_right_direction
      t: JavaScript 在向正确的方向发展

    - key: opinions.building_js_apps_overly_complex
      t: 现在构建 JavaScript 应用过于复杂

    - key: opinions.js_over_used_online
      t: JavaScript 被过度使用

    - key: opinions.enjoy_building_js_apps
      t: 我享受构建 JavaScript 应用程序

    - key: opinions.would_like_js_to_be_main_lang
      t: 我希望 JavaScript 成为我的主要编程语言

    - key: opinions.js_ecosystem_changing_to_fast
      t: JavaScript 生态系统的变化太快了

    - key: opinions_others.missing_from_js.others
      t: 你觉得 JavaScript 目前还缺少什么？
    - key: opinions_others.missing_from_js.others.description
      t: 你希望有一天在JavaScript中看到的特性。

    - key: happiness.front_end_frameworks
      t: 你当前对前端框架的状态有多满意？
    - key: happiness.back_end_frameworks
      t: 你当前对后端框架的状态有多满意？
    - key: happiness.testing
      t: 你当前对测试工具的状态有多满意？
    - key: happiness.mobile_desktop
      t: 你当前对跨端框架的状态有多满意？
    - key: happiness.build_tools
      t: 你当前对构建工具的状态有多满意？
    - key: happiness.monorepo_tools
      t: 你当前对 monorepo 工具的状态有多满意？

    - key: happiness.state_of_the_web
      t: 你对网络技术的总体状况感到满意吗？

    - key: happiness.state_of_js
      t: 你对 JavaScript 的总体状况感到满意吗？

    # Pain Points
    - key: opinions.js_pain_points
      t: JavaScript痛点
    - key: opinions.js_pain_points.description
      t: 对于每一个匹配，选择你最难以处理的JavaScript方面。

    - key: opinions_others.js_pain_points.others
      t: 其他JavaScript痛点

    # Missing Features
    - key: opinions.currently_missing_from_js
      t: 你觉得JavaScript目前缺少什么？
    - key: opinions.currently_missing_from_js.description
      t: 对于每个匹配，选择你最希望在JavaScript中使用的功能。
    - key: opinions_others.currently_missing_from_js.others
      t: 其他缺失的功能

    # pain points/currently missing (results)
    - key: js_pain_points.js_pain_points_wins
      t: JavaScript 的痛点
    - key: js_pain_points.js_pain_points_wins.description
      t: JavaScript 的哪个方面让你最头痛？请按赢得锦标赛的回合数进行排名。

    - key: js_pain_points.js_pain_points_matchups
      t: JavaScript 的痛点（比较）
    - key: js_pain_points.js_pain_points_matchups.description
      t: JavaScript 的哪个方面你最纠结？左侧项目相对于顶部项目赢得的回合百分比。

    - key: currently_missing_from_js.currently_missing_from_js_wins
      t: JavaScript 缺失的特性
    - key: currently_missing_from_js.currently_missing_from_js_wins.description
      t: 您现在最希望在 JavaScript 中使用哪个功能？请按赢得锦标赛的回合数进行排名。

    - key: currently_missing_from_js.currently_missing_from_js_matchups
      t: JavaScript 缺失的特性（比较）
    - key: currently_missing_from_js.currently_missing_from_js_matchups.description
      t: 您现在最希望在 JavaScript 中使用哪个功能？左侧项目相对于顶部项目赢得的回合百分比。

    ###########################################################################
    # Resources
    ###########################################################################
    
    - key: resources.first_steps
      t: 使用JavaScript的第一步
    - key: resources.first_steps.description
      t: 刚开始学习时，你最初是如何学习JavaScript的？
