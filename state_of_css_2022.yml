locale: zh-Hans
translations:
  ###########################################################################
  # General
  ###########################################################################

  - key: general.results.description
    t: 2022年 CSS 生态最新趋势的年度调查。

  - key: general.css2022.js2022_banner
    t: 2022 年的 JS 生态调查目前正在进行中， 您可以前往[这里参与](https://survey.devographics.com/survey/state-of-js/2022?source=css2022)!

  - key: general.css2022.results_intro
    t: |
      CSS 正在以前所未有的速度发展。我们不仅看到了新的特性和属性，甚至语言的基础也通过嵌套和级联层的创新得到重新工具化和改进。

      幸运的是，今年我们得到了一些人的帮助：W3C 工作组成员 [Lea Verou](https://lea.verou.me/) 挑选了今年的调查问题，特别关注了新的和即将推出的 CSS 特性。

      更重要的是，调查结果还将帮助浏览器厂商优先考虑它们的路线图，并努力提高浏览器之间的兼容性。

      废话不多说，让我们看看 CSS 在 2022 年是如何发展的吧!

  ###########################################################################
  # Introduction
  ###########################################################################

  - key: introduction.css2022
    t: |
      <span class="first-letter">我</span> 们认为，由于 Flexbox、Grid 和 CSS 变量等进步， CSS 已经发展成为一个相当强大的语言。但事实证明，这还不是它的最终形态。

      父选择器、原生嵌套、容器查询、级联层……当想到这些即将到来的开挂般的功能时是相当震惊的。

      幸运的是，我们有最好的导游可以帮助我们应对这些挑战：[Lea Verou](http://lea.verou.me/) 已经带头设计了今年的调查，希望调查结果将包括所有你应该了解的关键创新。

      <span class="conclusion__byline">– Sacha Greif</span>

      P.S. 今年还有一个新功能：我们给受访者提供了对调查中提到的所有特性和工具库进行**评论**的功能！请务必在每个图表的侧边栏中查看这些评论。

  ###########################################################################
  # Tshirt
  ###########################################################################

  - key: sections.tshirt.title
    t: T-shirt

  - key: sections.tshirt.description
    t: |
      ## 通过 State of CSS T恤来支持调查

      在糟糕的视频质量、笨重的磁带和不得不倒带之间，VHS 时代并没有太多值得怀念的地方。 但我们*会*错过的一件事是 90 年代用于装饰空白 VHS 磁带的惊人视觉效果。

      但是现在，多亏了才华横溢的 Christopher Kirk-Nielsen，你可以享受所有这些复古的光芒，同时也庆祝你对 CSS 的热爱！

  - key: tshirt.about
    t: 关于T恤衫

  - key: tshirt.description
    t: |
      我们使用高品质、超柔软的三重混纺衬衫，修身版型。

  - key: tshirt.getit
    t: 买它

  - key: tshirt.price
    t: 29 美元

  - key: tshirt.designer.heading
    t: 关于设计师

  - key: tshirt.designer.name
    t: Christopher Kirk-Nielsen

  - key: tshirt.designer.bio
    t: |
      Chris 来自法国，现居美国，不仅是一位了不起的前端开发人员，还是一位擅长复古视觉的天才插画家。 事实上，我们鼓励你也看看他的 [其他 T 恤设计](https://chriskirknielsen.com/designs)！

  ###########################################################################
  # Charts
  ###########################################################################

  - key: options.features_categories.layout
    aliasFor: sections.layout.title
  - key: options.features_categories.shapes_graphics
    aliasFor: sections.shapes_graphics.title
  - key: options.features_categories.interactions
    aliasFor: sections.interactions.title
  - key: options.features_categories.typography
    aliasFor: sections.typography.title
  - key: options.features_categories.accessibility
    aliasFor: sections.accessibility.title
  - key: options.features_categories.other_features
    aliasFor: sections.other_features.title
  - key: options.features_categories.colors
    aliasFor: sections.colors.title
  - key: options.features_categories.selectors
    aliasFor: sections.selectors.title

  ###########################################################################
  # Awards
  ###########################################################################

  - key: award.feature_adoption_delta_award.comment
    t: |
      Flexbox 的 `gap` 属性是非常有用的补充功能，它在 2022 年能获得 **{value}** 的提高完全不意外。

  # - key: award.tool_usage_delta_award.comment
  #   t: No other tool comes even close to Tailwind CSS's dramatic **{value}** progression over the last year.

  - key: award.most_commented_featured_award.comment
    t: 总共有 **{value}** 条评论提到，没有其他特性能带来像 SubGrid 这么多的反馈了。

  - key: award.tool_satisfaction_award.comment
    t: |
      在所有的 CSS-in-JS 解决方案中脱颖而出，CSS Modules 是唯一一个可以保持 **{value}** 这么极高保持率的。

  # - key: award.tool_interest_award.comment
  #   t: With a **{value}** ratio, CSS Modules again generated the most interest among CSS developers this year.

  - key: award.most_write_ins_award.comment
    t: |
      Arc 浏览器有 **{value}** 次被提及，是迄今为止在自由提问中被提及最多的工具。

  ###########################################################################
  # Conclusion
  ###########################################################################

  - key: conclusion.css2022
    t: |
      <span class="first-line">[去年](https://2021.stateofcss.com/en-US/conclusion/)， Kilian 预言我们编写 CSS 的方式将永远改变，而今年的结果验证了他的预言。</span>

      [Interop 2022](https://wpt.fyi/interop-2022) 将浏览器聚集在一起，为同一个目标而努力，有几个功能从 "永远不会发生 "变成了 "现在正在发生"。父选择器（:has()）和容器查询（@container）是其中的两个重磅功能。多年来，由于性能的影响，开发者们一直认为这些功能是不可能实现的，但事实证明，这两种功能都是可能的。

      另一方面，Subgrid 一直在推进了，它是一项非常大的任务。Firefox 和 Safari 已经支持了，Chrome 也在积极实现中，所以我们明年可能会看到更高的使用率。

      我预测，2023 年的明星功能将是原生嵌套和颜色处理。目前，嵌套是人们仍在使用预处理器的[主要原因](https://twitter.com/leaverou/status/806936438797307904)，因此，能够在原生 CSS 中使用它将是绝佳的体验。

      在 CSS 中和颜色打交道也将变得更加令人兴奋。就在我们聊天的时候，有一大波功能正在被实现了。到2023年底，我们可能就能用上广色域颜色和设备独立颜色 (`color()`, `lab()`, `lch()`, `oklab()`, `oklch()`)，并且我们能够通过 color-mix() 对它们进行基本操作。

      所有这些都意味着 2023 年对 CSS 来说可能是非常激动人心的一年。不管我的预测是否正确，我都期待着即将到来的所有令人赞叹的实现。这是个写 CSS 体验很棒的时代！

  - key: conclusion.css2022.bio
    t: W3C Technical Architecture Group Member, MIT CSAIL

  ###########################################################################
  # Picks
  ###########################################################################

  - key: picks.my_pick
    t: "My 2022 Pick: "
  - key: picks.intro
    t: We asked members of the CSS community to share their “pick of the year”

  - key: picks.david_east.name
    t: CSS Subgrid
  - key: picks.david_east.bio
    t: Advocate for building on the web
  - key: picks.david_east.description
    t: |
      CSS Subgrid allows child elements to inherit their parents grid properties. 
      Soon, it will be much easier to lay elements out to the same grid 
      lines across the entire page.

  - key: picks.bramus_van_damme.name
    t: The `:has()` Selector
  - key: picks.bramus_van_damme.bio
    t: Chrome Developer Relations Engineer at Google
  - key: picks.bramus_van_damme.description
    t: |
      You might know this one as the so-called “parent selector” but that name does it 
      no justice as it only covers a small part of what it can do. 
      This selector has essentially changed the way I write my CSS.

  - key: picks.kevin_j_powell.name
    t: Jhey Tompkins
  - key: picks.kevin_j_powell.bio
    t: CSS Evangelist
  - key: picks.kevin_j_powell.description
    t: |
      Jhey is always pushing the limits of what we can do with CSS with 
      fun and impressive demos and Codepens. With all the new features landing in CSS recently, 
      Jhey is at the forefront of explaining how they work.

  - key: picks.samuel_kraft.name
    t: The `:has()` Selector
  - key: picks.samuel_kraft.bio
    t: Design Engineer
  - key: picks.samuel_kraft.description
    t: |
      The new :has() selector is super powerful and unlocks new styling possibilities. 
      This great article from Jen Simmons breaks it down with explanations and practical examples.

  - key: picks.josh_comeau.name
    t: Modern CSS
  - key: picks.josh_comeau.bio
    t: Software developer and educator
  - key: picks.josh_comeau.description
    t: |
      CSS has changed so much over the past few years. 
      Stephanie shows us how to leverage modern CSS features 
      to solve old problems in new ways.

  - key: picks.adam_argyle.name
    t: The `:has()` Selector
  - key: picks.adam_argyle.bio
    t: UI/CSS DevRel at Google
  - key: picks.adam_argyle.description
    t: |
      CSS just because even stronger at orchestrating UI interaction across components. 
      We've barely scratched the surface of the impact of `:has()` on our styles.

  - key: picks.eric_w_bailey.name
    t: “Style with Stateful, Semantic Selectors” by Ben Myers
  - key: picks.eric_w_bailey.bio
    t: Accessibility advocate and CSS nerd
  - key: picks.eric_w_bailey.description
    t: |
      Ben demonstrates how utilizing ARIA 
      attribute selectors can simply and powerfully tie appearance to state.

  - key: picks.michelle_barker.name
    t: Interop 2022
  - key: picks.michelle_barker.bio
    t: Writer and creator of front-end blog CSS { In Real Life }
  - key: picks.michelle_barker.description
    t: |
      Interop is a collaboration between all of the major browser vendors, 
      agreeing 15 key areas of focus for implementation — 
      including game-changing new CSS features like container queries, 
      cascade layers and color functions.

  - key: picks.gift_egwuenu.name
    t: Learn CSS
  - key: picks.gift_egwuenu.bio
    t: Developer Advocate at Cloudflare
  - key: picks.gift_egwuenu.description
    t: |
      My recommended resource for anyone looking to learn CSS from the ground up, 
      I also use it as a reference everytime I need to look up any CSS property.

  - key: picks.ahmad_shadeed.name
    t: Container Queries
  - key: picks.ahmad_shadeed.bio
    t: Author of [Debugging CSS](https://debuggingcss.com/), Writing at [ishadeed.com](http://ishadeed.com)
  - key: picks.ahmad_shadeed.description
    t: |
      If I would pick one highlight for 2022, it's container queries! 
      They are finally here in stable browser near you

  # - key: picks.georgedoescode.name
  #   t:
  # - key: picks.georgedoescode.bio
  #   t:
  # - key: picks.georgedoescode.description
  #   t: |

  - key: picks.jen_simmons.name
    t: The `:has()` Selector
  - key: picks.jen_simmons.bio
    t: Web technologies evangelist at Apple
  - key: picks.jen_simmons.description
    t: |
      For two decades, “parent selector” was a top requested feature for CSS. 
      Then in 2022, in a total surprise, the :has() pseudo-class arrived to solve this and far more.

  - key: picks.sara_soueidan.name
    t: The `:has()` Selector
  - key: picks.sara_soueidan.bio
    t: Independent inclusive design engineer
  - key: picks.sara_soueidan.description
    t: |
      We've been wishing and waiting for CSS container queries for so long. 
      But then `:has()` arrived shortly after, 
      and it felt like it was "everything we never knew we always wanted".

  - key: picks.adam_wathan.name
    t: Empty CSS Variables
  - key: picks.adam_wathan.bio
    t: Creator of Tailwind CSS
  - key: picks.adam_wathan.description
    t: |
      Not many people know this but `--my-var: ;` is totally valid CSS, 
      and it's way more useful than you think. 
      We use it in Tailwind CSS all the time to make it 
      possible to decompose a single CSS property into multiple classes.

  # - key: picks.christianoliff.bio
  #   t: Front-end developer for Trimble MAPS
  # - key: picks.christianoliff.description
  #   t: |
  #       One thing I've really started using and appreciating this year though is Purge CSS- an awesome tool for removing unused CSS. It can greatly reduce the size of your CSS, and its fast and easy to use.

  - key: picks.kilian_valkhof.name
    t: Interop 2022
  - key: picks.kilian_valkhof.bio
    t: Web developer and creator of Polypane
  - key: picks.kilian_valkhof.description
    t: |
      Started in 2021 as Compat 2021, browser engine makers 
      have started coordinating which features they prioritize. 
      Not only is this closing the various feature gaps that exist 
      between between browsers, it's also increasing the speed with which new 
      features like @layer lands across browsers.

  # - key: picks.piccalilli_.bio
  #   t: Freelance designer & dev who runs piccalil.li
  # - key: picks.piccalilli_.description
  #   t: |
  #       This blog is an absolute gold mine of CSS knowledge. Michelle is a CSS legend and every post or tutorial they write is heaped with useful content.

  # - key: picks.piccalilli_.bio
  #   t: Freelance designer & dev who runs piccalil.li
  # - key: picks.piccalilli_.description
  #   t: |
  #       This blog is an absolute gold mine of CSS knowledge. Michelle is a CSS legend and every post or tutorial they write is heaped with useful content.

  # - key: picks.sarasoueidan.bio
  #   t: Independent UI/design engineer
  # - key: picks.sarasoueidan.description
  #   t: |
  #       My pick is a person, namely Rachel Andrew. She taught CSS Grid to a whole generation of developers.

  # - key: picks.5t3ph.bio
  #   t: Software Engineer @ Microsoft
  # - key: picks.5t3ph.description
  #   t: |
  #       In this conference talk, Manuel Matuzovic provides thoughtfully
  #       crafted examples that are engaging, approachable, and actionable.

  # - key: picks.hugogiraudel.bio
  #   t: Non-binary accessibility & diversity advocate
  # - key: picks.hugogiraudel.description
  #   t: |
  #       Fela is an amazing piece of software.
  #       It’s pretty powerful, relatively easy to use and very performant

  # - key: picks.foolip.bio
  #   t: Software Engineer @ Google
  # - key: picks.foolip.description
  #   t: |
  #       Sergio has recently fixed lots of Flexbox in WebKit and even some in Chromium,
  #       notably bringing flex gap to WebKit,
  #       which means that soon it will be available on all modern browsers.

  # - key: picks.jina.bio
  #   t: Design systems advocate and practitioner
  # - key: picks.jina.description
  #   t: |
  #       The media query to reduce motion, which helps avoid
  #       triggering dizziness and discomfort.

  ###########################################################################
  # Sponsors
  ###########################################################################

  - key: sponsors.frontendmasters.description
    t: Advance your skills with in-depth, modern front-end engineering courses.
  - key: sponsors.nijibox.description
    t: The browser for ambitious devs. Build responsive, accessible and fast websites with ease.
  - key: sponsors.renderatl.description
    t: The largest tech conference with a dedicated Design & CSS track.
  - key: sponsors.google_chrome.description
    t: Thanks to the Google Chrome team for supporting our work.

  ###########################################################################
  # FAQ/About
  ###########################################################################

  - key: about.content
    t: >
      The 2022 State of CSS survey ran from October 1 to November 1 2022, and collected 14,310 responses. The survey is run by me, [Sacha Greif](https://sachagreif.com/), with help from a team of open-source contributors and consultants. 

      This year's logo and t-shirt were reused from last year, when they were designed and animated by [Christopher Kirk-Nielsen](http://chriskirknielsen.com/).

      ### Survey Goals

      This survey, along with the [State of JavaScript](https://stateofjs.com/) survey, was created to identify upcoming trends in the web development ecosystem in order to help developers make technological choices. 

      As such, these surveys are focused on anticipating what's coming over the next few years rather than analyzing what's popular now, which is why the features or technologies that are currently most widespread are not always included. 

      Aditionally, survey data is also used by browser vendors to prioritize features and inform initiatives such as [Interop 2022](https://wpt.fyi/interop-2022).

      ### Survey Design

      This year, survey design was lead by [Lea Verou](https://lea.verou.me/) thanks to a funding grant from the Google Chrome team, and managed publicly [on GitHub](https://github.com/orgs/Devographics/projects/1). All survey questions were optional. 

      Additionally, going forward we will also coordinate survey design, review, and feedback through a [Working Group mailing list](https://www.devographics.com/working-group/).

      ### Survey Audience

      The survey was openly accessible online and respondents were not filtered or selected in any way. Respondents were primarily a mix of respondents from past surveys (alerted through a dedicated mailing list) and social media traffic. 

      ### Project Funding

      Funding from this project comes from a variety of sources:

      - **T-shirt sales**. 

      - **Sponsored Links**: the links to recommended resources at the bottom of each page are provided by our partner [Frontend Masters](https://frontendmasters.com/).

      - **Sponsored Charts**: starting last year, anybody can now also choose to directly sponsor a chart for $10 or more, and get their Twitter avatar displayed next to it.

      - **Google**: this year, the [Google Chrome](https://www.google.com/chrome/) team set aside a budget to hire Lea to help design the survey, as well as funded me directly to help support my work. 

      - **Nijibox**: Japan-based [Nijibox](https://nijibox.jp/) has also graciously accepted to sponsor my efforts to help make these yearly surveys more sustainable. 

      ### Technical Overview

      You can find a more in-depth technical overview of how the surveys are run [here](https://dev.to/sachagreif/how-the-state-of-js-css-surveys-are-run-4lnb). Our code is [open-source](https://github.com/Devographics/Monorepo/). 

      - **Data collection**: [Next.js](https://nextjs.org/) app running on [Vercel](https://vercel.com/).

      - **Data storage/processing**: MongoDB & MongoDB Aggregations running on [MongoDB Atlas](https://cloud.mongodb.com/).

      - **Data API**: Node.js GraphQL API running on [Render](https://render.com/). 

      - **Results Site**: [Gatsby](https://www.gatsbyjs.com/) React app running on [Netlify](https://netlify.com/).

      - **Data Visualizations**: [Nivo](https://nivo.rocks/) React dataviz library. 

      - **Type**: [IBM Plex Mono](https://fonts.google.com/specimen/IBM+Plex+Mono) and [Bebas Neue](https://fonts.google.com/specimen/Bebas+Neue).

      ### Feedback

      - [Report a technical issue](https://github.com/Devographics/Monorepo/issues)
      - [Make a suggestion for next year](https://github.com/Devographics/surveys/issues/66)
      - [Other non-technical issues](https://github.com/Devographics/surveys/issues)
      - [Join our Discord](https://discord.gg/tuWRUWVyJs)
      - [Join the Devographics Working Group](https://www.devographics.com/working-group/) to participate in the design and review of future surveys.
